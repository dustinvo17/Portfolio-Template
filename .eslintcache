[{"C:\\Users\\datvo\\Desktop\\datvo-portfolio\\src\\index.js":"1","C:\\Users\\datvo\\Desktop\\datvo-portfolio\\src\\App.js":"2","C:\\Users\\datvo\\Desktop\\datvo-portfolio\\src\\pages\\HomePage.js":"3","C:\\Users\\datvo\\Desktop\\datvo-portfolio\\src\\pages\\Contact.js":"4","C:\\Users\\datvo\\Desktop\\datvo-portfolio\\src\\pages\\Projects.js":"5","C:\\Users\\datvo\\Desktop\\datvo-portfolio\\src\\components\\Header.js":"6","C:\\Users\\datvo\\Desktop\\datvo-portfolio\\src\\components\\Banner.js":"7","C:\\Users\\datvo\\Desktop\\datvo-portfolio\\src\\components\\Introduction.js":"8","C:\\Users\\datvo\\Desktop\\datvo-portfolio\\src\\data\\data.js":"9","C:\\Users\\datvo\\Desktop\\datvo-portfolio\\src\\components\\ProjectList.js":"10","C:\\Users\\datvo\\Desktop\\datvo-portfolio\\src\\components\\SectionTitle.js":"11","C:\\Users\\datvo\\Desktop\\datvo-portfolio\\src\\components\\ContentHeader.js":"12"},{"size":909,"mtime":1608453438807,"results":"13","hashOfConfig":"14"},{"size":726,"mtime":1608513047508,"results":"15","hashOfConfig":"14"},{"size":293,"mtime":1608502009058,"results":"16","hashOfConfig":"14"},{"size":150,"mtime":1608437272827,"results":"17","hashOfConfig":"14"},{"size":201,"mtime":1608533700489,"results":"18","hashOfConfig":"14"},{"size":1319,"mtime":1608512047741,"results":"19","hashOfConfig":"14"},{"size":6313,"mtime":1608533315213,"results":"20","hashOfConfig":"14"},{"size":1961,"mtime":1608528334844,"results":"21","hashOfConfig":"14"},{"size":5408,"mtime":1608527636240,"results":"22","hashOfConfig":"14"},{"size":6106,"mtime":1608533568119,"results":"23","hashOfConfig":"14"},{"size":535,"mtime":1608518374043,"results":"24","hashOfConfig":"14"},{"size":1025,"mtime":1608526819432,"results":"25","hashOfConfig":"14"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1um12d0",{"filePath":"28","messages":"29","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"36","messages":"37","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"38","messages":"39","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"40"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"43","messages":"44","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"45","messages":"46","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"47"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\datvo\\Desktop\\datvo-portfolio\\src\\index.js",[],"C:\\Users\\datvo\\Desktop\\datvo-portfolio\\src\\App.js",["52","53"],"C:\\Users\\datvo\\Desktop\\datvo-portfolio\\src\\pages\\HomePage.js",[],"C:\\Users\\datvo\\Desktop\\datvo-portfolio\\src\\pages\\Contact.js",[],"C:\\Users\\datvo\\Desktop\\datvo-portfolio\\src\\pages\\Projects.js",[],"C:\\Users\\datvo\\Desktop\\datvo-portfolio\\src\\components\\Header.js",["54"],"C:\\Users\\datvo\\Desktop\\datvo-portfolio\\src\\components\\Banner.js",["55","56","57"],"import React, { useEffect, useState } from \"react\";\r\nimport Box from \"@material-ui/core/Box\";\r\nimport { makeStyles, useTheme } from \"@material-ui/core/styles\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport Container from \"@material-ui/core/Container\";\r\nimport Divider from \"@material-ui/core/Divider\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport Avatar from \"@material-ui/core/Avatar\";\r\nimport Card from \"@material-ui/core/Card\";\r\nimport CardActions from \"@material-ui/core/CardActions\";\r\nimport CardContent from \"@material-ui/core/CardContent\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport LinkedInIcon from \"@material-ui/icons/LinkedIn\";\r\nimport GitHubIcon from \"@material-ui/icons/GitHub\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport { LINKS } from \"../data/data\";\r\nimport useMediaQuery from \"@material-ui/core/useMediaQuery\";\r\nconst useStyles = makeStyles((theme) => ({\r\n  boxBanner: {\r\n    [theme.breakpoints.between(0,900)]: {\r\n      textAlign: \"center\",\r\n      padding: \"30px 5px\",\r\n    },\r\n    display:'flex',\r\n    justifyContent:'center',\r\n    alignItems:'center',\r\n    padding: theme.spacing(3),\r\n    marginTop: theme.spacing(4),\r\n    marginBottom: theme.spacing(5),\r\n    minHeight:'300px',\r\n  },\r\n  large: {\r\n    width: \"240px\",\r\n    height: \"240px\",\r\n  },\r\n  cardIntroduction: {},\r\n  textContent: {\r\n    lineHeight: 2.5,\r\n    marginTop: theme.spacing(3),\r\n    marginBottom: theme.spacing(3),\r\n  },\r\n  divider: {\r\n    marginTop: theme.spacing(3),\r\n    marginBottom: theme.spacing(3),\r\n  },\r\n  icon: {\r\n    cursor: \"pointer\",\r\n    fontSize: 45,\r\n  },\r\n  cardContent: {\r\n    marginBottom: theme.spacing(3),\r\n  },\r\n  gridItemBreak: {\r\n    \r\n    [theme.breakpoints.between(0,900)]: {\r\n      order: 1,\r\n      marginTop: \"20px\",\r\n    },\r\n  },\r\n  iconContainers: {\r\n    [theme.breakpoints.between(0,900)]: {\r\n      justifyContent: \"center\",\r\n    },\r\n  },\r\n  buttonContainer: {\r\n    [theme.breakpoints.between(0,900)]: {\r\n      justifyContent: \"center\",\r\n    }\r\n    \r\n  },\r\n  avatarGrid :{\r\n    display: \"flex\",\r\n    justifyContent: \"center\",\r\n    width:'100%',\r\n    alignItems: \"flex-start\",\r\n  }\r\n}));\r\n\r\nexport default function Banner() {\r\n  const [title, setTitle] = useState(\"\");\r\n  const [description, setDescripton] = useState(\"\");\r\n  useEffect(() => {\r\n    const windowURL = window.location.href;\r\n    if (windowURL.includes(\"contact\")) {\r\n      setTitle(\"Contact Me\");\r\n      setDescripton(\"Wanna hire or collaborate with me? Let's talk!\");\r\n    }\r\n    if (windowURL.includes(\"projects\")) {\r\n      setTitle(\"Projects\");\r\n      setDescripton(\"What kind of cool stuffs have I built? Check out below!\");\r\n    } else {\r\n    }\r\n  }, []);\r\n  const classes = useStyles();\r\n  const theme = useTheme();\r\n  console.log(theme.breakpoints)\r\n  const renderSubPage = () => {\r\n    return (\r\n      <div\r\n        style={{\r\n          display: \"flex\",\r\n          flexDirection: \"column\",\r\n          textAlign: \"center\",\r\n          justifyContent: \"center\",\r\n        }}\r\n      >\r\n        <Typography variant=\"h4\" color=\"primary\">\r\n          {title}\r\n        </Typography>\r\n        <Divider className={classes.divider} variant=\"middle\" />\r\n        <Typography variant=\"body2\" color=\"textSecondary\">\r\n          {description}\r\n        </Typography>\r\n      </div>\r\n    );\r\n  };\r\n\r\n  return (\r\n    <Box boxShadow={4} color=\"text.primary\"  className={classes.boxBanner}>\r\n      {window.location.href.includes(\"contact\") ||\r\n      window.location.href.includes(\"projects\") ? (\r\n        renderSubPage()\r\n      ) : (\r\n        <React.Fragment>\r\n          <Grid\r\n        \r\n            container\r\n           \r\n          >\r\n            <Grid sm={12} md={8} lg={8} item className={classes.gridItemBreak}>\r\n              <Card className={classes.cardIntroduction} elevation={0}>\r\n                <CardContent className={classes.cardContent}>\r\n                  <Typography variant=\"h5\" color=\"primary\">\r\n                    Hello There! I'm\r\n                    <b style={{ marginLeft: \"10px\" }}>Dat Vo</b>\r\n                  </Typography>\r\n                  <Typography\r\n                    variant=\"body2\"\r\n                    component=\"p\"\r\n                    color=\"textSecondary\"\r\n                    className={classes.textContent}\r\n                  >\r\n                    Result-driven Software Engineer with strong knowledge of\r\n                    Computer Science, and 3 years of experience in Programming /\r\n                    Full Stack Development. I strongly believe that utilizing\r\n                    tech is the best way to deliver great social impact.\r\n                  </Typography>\r\n                  <div\r\n                    className={classes.iconContainers}\r\n                    style={{ display: \"flex\", alignItems: \"center\" }}\r\n                  >\r\n                    <GitHubIcon\r\n                      onClick={() => window.open(LINKS.GITHUB)}\r\n                      style={{ marginRight: \"30px\" }}\r\n                      className={classes.icon}\r\n                    />\r\n                    <LinkedInIcon\r\n                      onClick={() => window.open(LINKS.LINKEDIN)}\r\n                      className={classes.icon}\r\n                    />\r\n                  </div>\r\n                </CardContent>\r\n                <CardActions\r\n                  className={classes.buttonContainer}\r\n                  style={{ marginLeft: \"8px\" }}\r\n                >\r\n                  <Button\r\n                    onClick={() => window.open(LINKS.RESUME)}\r\n                    variant=\"contained\"\r\n                    color=\"primary\"\r\n                    size=\"medium\"\r\n                  >\r\n                    Resume\r\n                  </Button>\r\n                </CardActions>\r\n              </Card>\r\n            </Grid>\r\n            <Grid \r\n              sm={12}\r\n              md={4}\r\n              lg={4}\r\n              item\r\n              className={classes.avatarGrid}\r\n\r\n            >\r\n              <Box boxShadow={12} clone>\r\n                <Avatar\r\n                  elevation={5}\r\n                  alt=\"Dat Vo Tech Avatar\"\r\n                  src=\"/images/avatar.png\"\r\n                  className={classes.large}\r\n                />\r\n              </Box>\r\n            </Grid>\r\n          </Grid>\r\n        </React.Fragment>\r\n      )}\r\n    </Box>\r\n  );\r\n}\r\n","C:\\Users\\datvo\\Desktop\\datvo-portfolio\\src\\components\\Introduction.js",["58"],"C:\\Users\\datvo\\Desktop\\datvo-portfolio\\src\\data\\data.js",["59"],"C:\\Users\\datvo\\Desktop\\datvo-portfolio\\src\\components\\ProjectList.js",["60","61","62"],"import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { makeStyles, useTheme } from \"@material-ui/core/styles\";\r\nimport useMediaQuery from \"@material-ui/core/useMediaQuery\";\r\nimport AppBar from \"@material-ui/core/AppBar\";\r\nimport Tabs from \"@material-ui/core/Tabs\";\r\nimport Tab from \"@material-ui/core/Tab\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport Box from \"@material-ui/core/Box\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport { PROJECT_TYPE } from \"../data/data\";\r\nimport SectionTitle from \"./SectionTitle\";\r\nimport { PROJECTS_DATA } from \"../data/data\";\r\nimport ContentHeader from \"./ContentHeader\"\r\nimport List from \"@material-ui/core/List\"\r\nimport ListItem from \"@material-ui/core/ListItem\"\r\nimport Papper from \"@material-ui/core/Paper\"\r\nimport Button from \"@material-ui/core/Button\"\r\nimport YouTubeIcon from '@material-ui/icons/YouTube';\r\nimport GitHubIcon from '@material-ui/icons/GitHub';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    \r\n    root: {\r\n      flexGrow: 1,\r\n      backgroundColor: theme.palette.background.paper,\r\n    },\r\n    projectBox: {\r\n        paddingTop:theme.spacing(5),\r\n        paddingBottom:theme.spacing(5),\r\n        [theme.breakpoints.between(0,900)]: {\r\n            textAlign: \"center\",\r\n          \r\n        },\r\n    },\r\n    projectGridContainer :{\r\n       justifyContent:'center'\r\n    },\r\n    paperGridItem: {\r\n        padding:'20px  15px 20px 15px',\r\n        \r\n    },\r\n    projectButton: {\r\n        margin:'10px',\r\n        display:'flex',\r\n        alignItems:'center',\r\n      \r\n    },\r\n    buttonsContainer: {\r\n       \r\n        display:'flex',\r\n        marginTop:'20px',\r\n        flexWrap:'wrap',\r\n        [theme.breakpoints.between(0,900)]: {\r\n            justifyContent:'center'\r\n        }\r\n    },\r\n    icon: {\r\n        marginLeft:'5px'\r\n    },\r\n    gridOrder: {\r\n        [theme.breakpoints.between(0,900)]: {\r\n            order:'0!important'\r\n          },\r\n    },\r\n    textListAlign:{\r\n        [theme.breakpoints.between(0,900)]: {\r\n            textAlign:'center!important'\r\n          },\r\n    }\r\n  }));\r\n  \r\nfunction TabPanel(props) {\r\n  const { value } = props;\r\n  const classes = useStyles()\r\n\r\n  const matches = useMediaQuery('(max-width:900px)');\r\n  console.log(matches)\r\n  let projects;\r\n  switch (value) {\r\n    case 1:\r\n      projects = PROJECTS_DATA.filter(\r\n        (project) => project.type === PROJECT_TYPE.FRONT_END\r\n      );\r\n      break;\r\n    case 2:\r\n      projects = PROJECTS_DATA.filter(\r\n        (project) => project.type === PROJECT_TYPE.FULL_STACK\r\n      );\r\n      break;\r\n    case 3:\r\n      projects = PROJECTS_DATA.filter(\r\n        (project) => project.type === PROJECT_TYPE.DESKTOP\r\n      );\r\n      break;\r\n    default:\r\n      projects = [...PROJECTS_DATA];\r\n  }\r\n\r\n  return (\r\n    <div\r\n      role=\"tabpanel\"\r\n      id={`full-width-tabpanel-${value}`}\r\n      aria-labelledby={`full-width-tab-${value}`}\r\n    >\r\n       \r\n        {projects.map((p,index) => {\r\n           return  <Box   key={index} className={classes.projectBox}>\r\n         <Grid container alignItems=\"center\"  spacing={3} className={classes.projectGridContainer} >\r\n         <Grid  item sm={12} md={7} lg={7} style={{order: index % 2 === 0 ? 0 : 2 }}  className={classes.gridOrder}>\r\n              <img alt={p.image} src={p.image} style={{width:'100%'}}/>\r\n          </Grid>\r\n          <Grid item xs={12} sm={12} md={5} lg={5} style={{order:1}} className={classes.gridOrder}>\r\n            <Box className={classes.paperGridItem} boxShadow={3}>\r\n            <ContentHeader title={p.name}  description={p.description} />\r\n          \r\n          <Typography variant=\"body2\"\r\n                    color=\"textSecondary\"  >Key Features: </Typography>\r\n          <List dense={false} >     \r\n               {p.tech.map(point => {\r\n                   return <ListItem key={point} alignItems=\"center\" className={classes.textListAlign}   >\r\n                       <Typography variant=\"body2\"\r\n                    color=\"textSecondary\" style={{display:\"block\",lineHeight:2,wordWrap:'break-word',width:'100%'}}>\r\n                        {matches ? '' :'-'} {point}\r\n                       </Typography>\r\n                 </ListItem>\r\n                }\r\n               )  } \r\n            </List>\r\n            <div className={classes.buttonsContainer} >\r\n                {p.site ?   <Button size=\"small\" className={classes.projectButton} variant=\"contained\" color=\"primary\" onClick={() =>window.open(p.site)}>\r\n                Visit Site </Button> : ''}\r\n                {p.video ?   <Button size=\"small\" className={classes.projectButton} variant=\"contained\" color=\"secondary\"  onClick={() =>window.open(p.video)} >\r\n                 Demo <YouTubeIcon className={classes.icon} />\r\n            </Button> :'' }\r\n         \r\n            <Button size=\"small\" className={classes.projectButton} variant=\"contained\"  onClick={() =>window.open(p.source)}> \r\n                Code <GitHubIcon className={classes.icon}/>\r\n            </Button>\r\n            </div>\r\n         \r\n            </Box>\r\n        \r\n          </Grid>\r\n         \r\n        </Grid>;\r\n        </Box>\r\n      })}\r\n     \r\n    \r\n    </div>\r\n  );\r\n}\r\n\r\n\r\nexport default function ProjectList() {\r\n  const classes = useStyles();\r\n  const theme = useTheme();\r\n  const matches = useMediaQuery(theme.breakpoints.down(\"sm\"));\r\n  const [value, setValue] = React.useState(0);\r\n\r\n  const handleChange = (event, newValue) => {\r\n    console.log(newValue);\r\n    setValue(newValue);\r\n  };\r\n  return (\r\n    <div>\r\n      <SectionTitle title=\"My Latest Work\" />\r\n      <AppBar position=\"static\">\r\n        <Tabs\r\n          value={value}\r\n          onChange={handleChange}\r\n          indicatorColor=\"primary\"\r\n          orientation={matches ? \"vertical\" : \"horizontal\"}\r\n          variant=\"fullWidth\"\r\n          centered\r\n        >\r\n          <Tab label=\"All\" />\r\n          <Tab label={PROJECT_TYPE.FRONT_END} />\r\n          <Tab label={PROJECT_TYPE.FULL_STACK} />\r\n          <Tab label={PROJECT_TYPE.DESKTOP} />\r\n        </Tabs>\r\n      </AppBar>\r\n      <TabPanel value={value} index={0} />\r\n    </div>\r\n  );\r\n}\r\n","C:\\Users\\datvo\\Desktop\\datvo-portfolio\\src\\components\\SectionTitle.js",[],"C:\\Users\\datvo\\Desktop\\datvo-portfolio\\src\\components\\ContentHeader.js",[],{"ruleId":"63","severity":1,"message":"64","line":2,"column":15,"nodeType":"65","messageId":"66","endLine":2,"endColumn":24},{"ruleId":"63","severity":1,"message":"67","line":2,"column":25,"nodeType":"65","messageId":"66","endLine":2,"endColumn":33},{"ruleId":"63","severity":1,"message":"67","line":1,"column":17,"nodeType":"65","messageId":"66","endLine":1,"endColumn":25},{"ruleId":"63","severity":1,"message":"68","line":5,"column":8,"nodeType":"65","messageId":"66","endLine":5,"endColumn":17},{"ruleId":"63","severity":1,"message":"69","line":7,"column":8,"nodeType":"65","messageId":"66","endLine":7,"endColumn":13},{"ruleId":"63","severity":1,"message":"70","line":17,"column":8,"nodeType":"65","messageId":"66","endLine":17,"endColumn":21},{"ruleId":"63","severity":1,"message":"71","line":2,"column":8,"nodeType":"65","messageId":"66","endLine":2,"endColumn":18},{"ruleId":"63","severity":1,"message":"72","line":93,"column":7,"nodeType":"65","messageId":"66","endLine":93,"endColumn":12},{"ruleId":"63","severity":1,"message":"73","line":2,"column":8,"nodeType":"65","messageId":"66","endLine":2,"endColumn":17},{"ruleId":"63","severity":1,"message":"74","line":17,"column":8,"nodeType":"65","messageId":"66","endLine":17,"endColumn":14},{"ruleId":"63","severity":1,"message":"75","line":157,"column":9,"nodeType":"65","messageId":"66","endLine":157,"endColumn":16},"no-unused-vars","'useEffect' is defined but never used.","Identifier","unusedVar","'useState' is defined but never used.","'Container' is defined but never used.","'Paper' is defined but never used.","'useMediaQuery' is defined but never used.","'Typography' is defined but never used.","'Intro' is defined but never used.","'PropTypes' is defined but never used.","'Papper' is defined but never used.","'classes' is assigned a value but never used."]