[{"C:\\Users\\datvo\\Desktop\\datvo-portfolio\\src\\index.js":"1","C:\\Users\\datvo\\Desktop\\datvo-portfolio\\src\\App.js":"2","C:\\Users\\datvo\\Desktop\\datvo-portfolio\\src\\pages\\HomePage.js":"3","C:\\Users\\datvo\\Desktop\\datvo-portfolio\\src\\pages\\Contact.js":"4","C:\\Users\\datvo\\Desktop\\datvo-portfolio\\src\\pages\\Projects.js":"5","C:\\Users\\datvo\\Desktop\\datvo-portfolio\\src\\components\\Header.js":"6","C:\\Users\\datvo\\Desktop\\datvo-portfolio\\src\\components\\Banner.js":"7","C:\\Users\\datvo\\Desktop\\datvo-portfolio\\src\\components\\Introduction.js":"8","C:\\Users\\datvo\\Desktop\\datvo-portfolio\\src\\data\\data.js":"9","C:\\Users\\datvo\\Desktop\\datvo-portfolio\\src\\components\\ProjectList.js":"10","C:\\Users\\datvo\\Desktop\\datvo-portfolio\\src\\components\\SectionTitle.js":"11","C:\\Users\\datvo\\Desktop\\datvo-portfolio\\src\\components\\ContentHeader.js":"12","C:\\Users\\datvo\\Desktop\\datvo-portfolio\\src\\components\\ContactForm.js":"13"},{"size":909,"mtime":1608453438807,"results":"14","hashOfConfig":"15"},{"size":726,"mtime":1608591995874,"results":"16","hashOfConfig":"15"},{"size":374,"mtime":1608578477248,"results":"17","hashOfConfig":"15"},{"size":165,"mtime":1608591239177,"results":"18","hashOfConfig":"15"},{"size":201,"mtime":1608533700489,"results":"19","hashOfConfig":"15"},{"size":1635,"mtime":1608592495293,"results":"20","hashOfConfig":"15"},{"size":5887,"mtime":1608592191449,"results":"21","hashOfConfig":"15"},{"size":1789,"mtime":1608592240728,"results":"22","hashOfConfig":"15"},{"size":5408,"mtime":1608527636240,"results":"23","hashOfConfig":"15"},{"size":7293,"mtime":1608592253915,"results":"24","hashOfConfig":"15"},{"size":535,"mtime":1608518374043,"results":"25","hashOfConfig":"15"},{"size":1074,"mtime":1608579356000,"results":"26","hashOfConfig":"15"},{"size":4892,"mtime":1608592929727,"results":"27","hashOfConfig":"15"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},"1um12d0",{"filePath":"31","messages":"32","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"33"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"42","messages":"43","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"48","usedDeprecatedRules":"30"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"51","usedDeprecatedRules":"30"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\datvo\\Desktop\\datvo-portfolio\\src\\index.js",[],["58","59"],"C:\\Users\\datvo\\Desktop\\datvo-portfolio\\src\\App.js",["60","61"],"import {  Route, Switch } from 'react-router-dom';\nimport React,{useEffect,useState} from 'react'\nimport HomePage from './pages/HomePage'\nimport Contact from './pages/Contact'\nimport Projects from './pages/Projects';\nimport Header from './components/Header'\nimport Container from '@material-ui/core/Container'\nimport Banner from './components/Banner'\n\nfunction App() {\n  return (\n    <main>\n      <Container maxWidth=\"lg\">\n      <Header/>\n      <Banner  />\n      <Switch>\n        <Route path=\"/\" component={HomePage} exact />\n        <Route path=\"/contact\" component={Contact} exact />\n        <Route path=\"/projects\" component={Projects} exact/>\n      </Switch>\n      </Container>\n   \n    </main>\n  );\n}\n\nexport default App;\n","C:\\Users\\datvo\\Desktop\\datvo-portfolio\\src\\pages\\HomePage.js",[],"C:\\Users\\datvo\\Desktop\\datvo-portfolio\\src\\pages\\Contact.js",[],"C:\\Users\\datvo\\Desktop\\datvo-portfolio\\src\\pages\\Projects.js",[],"C:\\Users\\datvo\\Desktop\\datvo-portfolio\\src\\components\\Header.js",[],"C:\\Users\\datvo\\Desktop\\datvo-portfolio\\src\\components\\Banner.js",["62"],"C:\\Users\\datvo\\Desktop\\datvo-portfolio\\src\\components\\Introduction.js",[],"C:\\Users\\datvo\\Desktop\\datvo-portfolio\\src\\data\\data.js",["63"],"class ProjectData {\r\n    type;\r\n    name;\r\n    site;\r\n    description;\r\n    tech;\r\n    video;\r\n    constructor(type,name,site,description,tech,image,source, video = null,) {\r\n        this.type = type\r\n        this.name = name\r\n        this.site = site\r\n        this.description = description\r\n        this.tech = tech\r\n        this.video = video\r\n        this.image = image\r\n        this.source = source\r\n    }\r\n}\r\n\r\nexport const PROJECT_TYPE  =  {\r\n    FRONT_END:'FRONT END',\r\n    FULL_STACK:'FULL STACK',\r\n    DESKTOP:'DESKTOP'\r\n}\r\n\r\nexport const PROJECTS_DATA = [\r\n    new ProjectData(\r\n        PROJECT_TYPE.FRONT_END,\r\n        'GearM',\r\n        'https://gearm.netlify.app/',\r\n        'Developed an eCommerce website that sells over 100 gaming gears.',\r\n        ['UI development using React/Redux/Netlify.'],\r\n        './images/gearm.png',\r\n        'https://github.com/dustinvo17/GearStar'\r\n    ),\r\n    new ProjectData(\r\n        PROJECT_TYPE.FULL_STACK,\r\n        'Expert Room',\r\n        'https://expertroom.netlify.app/',\r\n        'Developed a chat application as a communication platform for professionals.',\r\n        ['Implemented JWT authentication system, REST API for friends-based system, real-time messages system, and files storage system using NestJS/WebSocket/MongoDB/AWS S3/Heroku.',\r\n        'Developed UI and managed data on client-side using React/Redux/Netlify.'  \r\n        ],\r\n        './images/chatapp.png'\r\n        ,\r\n        'https://github.com/dustinvo17/expert-room-api',\r\n        'https://www.youtube.com/watch?v=wdGhAfjTIYM'        \r\n\r\n    ),\r\n    new ProjectData(\r\n        PROJECT_TYPE.FULL_STACK,\r\n        'Smart Canvas',\r\n        null,\r\n        'Developed a learning management system that aims to improve Computer Science students productivity.',\r\n        ['Implemented Google/Github social authentication system, REST API for events schedule, PDF files upload, and to-do-list in MVC architecture using Laravel/MySQL/AWS S3/VueJS'],\r\n        './images/smartcanvas.png'\r\n        ,\r\n        'https://github.com/dustinvo17/smart-canvas',\r\n        'https://www.youtube.com/watch?v=pH7OJj-yVis'\r\n    ),\r\n    new ProjectData(\r\n        PROJECT_TYPE.FRONT_END,\r\n        'Red Town',\r\n        'https://redtown.netlify.app/',\r\n        'Developed a steakhouse restaurant website.',\r\n        ['UI development using vanilla HTML/CSS/SASS/Javascript'],\r\n        './images/restaurant.png',\r\n        'https://github.com/dustinvo17/redtown'\r\n    ),\r\n    new ProjectData(\r\n        PROJECT_TYPE.DESKTOP,\r\n        'Youtube Converter App',\r\n        null,\r\n        'Developed a cross-platform desktop application that provides functionality to download youtube videos/playlist in MP3/MP4 format.',\r\n        ['Implemented key-press events, push notifications, data-binding using ElectronJS.'],\r\n        './images/youtubeapp.png',\r\n        'https://github.com/dustinvo17/Youtube-Converter',\r\n        'https://www.youtube.com/watch?v=GD6Z2HynBCk'\r\n    ),\r\n    new ProjectData(\r\n        PROJECT_TYPE.FRONT_END,\r\n        'Artist Portfolio Website',\r\n        'https://minhquanart.com/',\r\n        'Developed a portfolio website for a popular Vietnamese artist.',\r\n        ['UI development using HTML/CSS/JQuery/Boostrap'],\r\n        './images/quanart.png',\r\n        'https://github.com/dustinvo17/artist-portfolio'\r\n    ),\r\n    \r\n    \r\n    \r\n]\r\nclass Intro {\r\n    title;\r\n    description;\r\n    \r\n}\r\nexport const INTROS = [\r\n    {\r\n        title:'Data Structures & Algorithms',\r\n        description:'I value the importance of Computer Science fundamentals, and continuously strengthen my knowledge in Data Structures & Algorithms to apply and improve the efficiency of software applications that I build.',\r\n        img: './images/datastructure.png'\r\n    },\r\n    {\r\n        title:'Full Stack Development',\r\n        description:'If you want someone with a good understanding of the overall full stack development, who can wear many hats and work across all parts of your product tech stack, Iâ€™ve got you covered. Whether you need modern and highly interactive UI components for your mobile/web app, or reliable API servers that perform your key business functions, I am highly confident that I would be a great contributor for your team!',\r\n        img: './images/fullstack.png'\r\n\r\n    },\r\n    {\r\n        title:'Quick Learner',\r\n        description:'Keep learning and adapting to the fast-evolving tech industry forever sound scary at first, but I take that as a very joyful habit. I always enjoy and open to learning new technologies as long as I have the right tools to solve the right problems and deliver great outcomes for the employers that I work for. ',\r\n        img: './images/learn.png'\r\n    },\r\n    {\r\n        title:'Team Player',\r\n        description:'Lucky to have opportunities to work with Senior Engineers in the industry and receive mentorship from them before, I canâ€™t appreciate enough the power of team-work and having the mindset to help and share knowledge with other team members. I look forward to more opportunities to learn from my new teammates, and at the same time being informative and helpful to them.',\r\n        img: './images/team.png'\r\n    }\r\n]\r\nexport const LINKS = {\r\n    RESUME: 'https://drive.google.com/file/d/10pfaC12JtHhc1YeL_0vmRk3QBx6m6FQf/view?usp=sharing',\r\n    LINKEDIN: 'https://www.linkedin.com/in/dustintvo/',\r\n    GITHUB :'https://github.com/dustinvo17' \r\n}","C:\\Users\\datvo\\Desktop\\datvo-portfolio\\src\\components\\ProjectList.js",["64","65","66","67"],"import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { makeStyles, useTheme } from \"@material-ui/core/styles\";\r\nimport useMediaQuery from \"@material-ui/core/useMediaQuery\";\r\nimport {\r\n  AppBar,\r\n  Tabs,\r\n  Tab,\r\n  type,\r\n  Grid,\r\n  Box,\r\n  List,\r\n  ListItem,\r\n  Paper,\r\n  Button,\r\n  Typography\r\n} from \"@material-ui/core\";\r\nimport YouTubeIcon from \"@material-ui/icons/YouTube\"\r\nimport GitHubIcon from \"@material-ui/icons/GitHub\"\r\nimport VisibilityIcon from '@material-ui/icons/Visibility';\r\nimport { PROJECT_TYPE } from \"../data/data\";\r\nimport SectionTitle from \"./SectionTitle\";\r\nimport { PROJECTS_DATA } from \"../data/data\";\r\nimport ContentHeader from \"./ContentHeader\";\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    flexGrow: 1,\r\n    backgroundColor: theme.palette.background.paper,\r\n  },\r\n  projectBox: {\r\n    paddingTop: theme.spacing(7),\r\n    paddingBottom: theme.spacing(7),\r\n    \"&:last-child\": {\r\n      paddingBottom:0\r\n    },\r\n    [theme.breakpoints.between(0, 900)]: {\r\n      textAlign: \"center\",\r\n      paddingTop: theme.spacing(5),\r\n      paddingBottom: theme.spacing(5),\r\n    },\r\n  },\r\n  projectGridContainer: {\r\n    justifyContent: \"center\",\r\n  },\r\n  paperGridItem: {\r\n    padding: \"20px  15px 20px 15px\",\r\n  },\r\n  projectButton: {\r\n    margin: \"10px\",\r\n    display: \"flex\",\r\n    alignItems: \"center\",\r\n  },\r\n  buttonsContainer: {\r\n    display: \"flex\",\r\n    marginTop: \"20px\",\r\n    flexWrap: \"wrap\",\r\n    [theme.breakpoints.between(0, 900)]: {\r\n      justifyContent: \"center\",\r\n    },\r\n  },\r\n  icon: {\r\n    marginLeft: \"5px\",\r\n  },\r\n  gridOrder: {\r\n    [theme.breakpoints.between(0, 900)]: {\r\n      order: \"0!important\",\r\n    },\r\n  },\r\n  textListAlign: {\r\n    [theme.breakpoints.between(0, 900)]: {\r\n      textAlign: \"center!important\",\r\n    },\r\n  },\r\n}));\r\n\r\nfunction TabPanel(props) {\r\n  const { value } = props;\r\n  const classes = useStyles();\r\n\r\n  const matches = useMediaQuery(\"(max-width:900px)\");\r\n  let projects;\r\n  switch (value) {\r\n    case 1:\r\n      projects = PROJECTS_DATA.filter(\r\n        (project) => project.type === PROJECT_TYPE.FRONT_END\r\n      );\r\n      break;\r\n    case 2:\r\n      projects = PROJECTS_DATA.filter(\r\n        (project) => project.type === PROJECT_TYPE.FULL_STACK\r\n      );\r\n      break;\r\n    case 3:\r\n      projects = PROJECTS_DATA.filter(\r\n        (project) => project.type === PROJECT_TYPE.DESKTOP\r\n      );\r\n      break;\r\n    default:\r\n      projects = [...PROJECTS_DATA];\r\n  }\r\n\r\n  return (\r\n    <div\r\n      role=\"tabpanel\"\r\n      id={`full-width-tabpanel-${value}`}\r\n      aria-labelledby={`full-width-tab-${value}`}\r\n    >\r\n      {projects.map((p, index) => {\r\n        return (\r\n          <Box key={index} className={classes.projectBox}>\r\n            <Grid\r\n              container\r\n              alignItems=\"center\"\r\n              spacing={4}\r\n              className={classes.projectGridContainer}\r\n            >\r\n              <Grid\r\n                item\r\n                sm={12}\r\n                md={7}\r\n                lg={7}\r\n                style={{ order: index % 2 === 0 ? 0 : 2 }}\r\n                className={classes.gridOrder}\r\n              >\r\n                <img alt={p.image} src={p.image} style={{ width: \"100%\" }} />\r\n              </Grid>\r\n              <Grid\r\n                item\r\n                xs={12}\r\n                sm={12}\r\n                md={5}\r\n                lg={5}\r\n                style={{ order: 1 }}\r\n                className={classes.gridOrder}\r\n              >\r\n                <Box className={classes.paperGridItem} boxShadow={3}>\r\n                  <ContentHeader title={p.name} description={p.description} />\r\n\r\n                  <Typography variant=\"body2\" color=\"textSecondary\">\r\n                    Key Features:{\" \"}\r\n                  </Typography>\r\n                  <List dense={false}>\r\n                    {p.tech.map((point) => {\r\n                      return (\r\n                        <ListItem\r\n                          key={point}\r\n                          alignItems=\"center\"\r\n                          className={classes.textListAlign}\r\n                        >\r\n                          <Typography\r\n                            variant=\"body2\"\r\n                            color=\"textSecondary\"\r\n                            style={{\r\n                              display: \"block\",\r\n                              lineHeight: 2,\r\n                              wordWrap: \"break-word\",\r\n                              width: \"100%\",\r\n                            }}\r\n                          >\r\n                            {matches ? \"\" : \"-\"} {point}\r\n                          </Typography>\r\n                        </ListItem>\r\n                      );\r\n                    })}\r\n                  </List>\r\n                  <div className={classes.buttonsContainer}>\r\n                    {p.site ? (\r\n                      <Button\r\n                        size=\"small\"\r\n                        className={classes.projectButton}\r\n                        variant=\"contained\"\r\n                        color=\"primary\"\r\n                        onClick={() => window.open(p.site)}\r\n                      >\r\n                        Visit Site <VisibilityIcon className={classes.icon}  />\r\n                      </Button>\r\n                    ) : (\r\n                      \"\"\r\n                    )}\r\n                    {p.video ? (\r\n                      <Button\r\n                        size=\"small\"\r\n                        className={classes.projectButton}\r\n                        variant=\"contained\"\r\n                        color=\"secondary\"\r\n                        onClick={() => window.open(p.video)}\r\n                      >\r\n                        Demo <YouTubeIcon className={classes.icon} />\r\n                      </Button>\r\n                    ) : (\r\n                      \"\"\r\n                    )}\r\n\r\n                    <Button\r\n                      size=\"small\"\r\n                      className={classes.projectButton}\r\n                      variant=\"contained\"\r\n                      onClick={() => window.open(p.source)}\r\n                    >\r\n                      Code <GitHubIcon className={classes.icon} />\r\n                    </Button>\r\n                  </div>\r\n                </Box>\r\n              </Grid>\r\n            </Grid>\r\n            ;\r\n          </Box>\r\n        );\r\n      })}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default function ProjectList() {\r\n  const classes = useStyles();\r\n  const theme = useTheme();\r\n  const matches = useMediaQuery(theme.breakpoints.down(\"sm\"));\r\n  const [value, setValue] = React.useState(0);\r\n\r\n  const handleChange = (event, newValue) => {\r\n    setValue(newValue);\r\n  };\r\n  return (\r\n    <div>\r\n      <SectionTitle title=\"My Latest Work\" />\r\n      <AppBar position=\"static\">\r\n        <Tabs\r\n          value={value}\r\n          onChange={handleChange}\r\n          indicatorColor=\"primary\"\r\n          orientation={matches ? \"vertical\" : \"horizontal\"}\r\n          variant=\"fullWidth\"\r\n          centered\r\n        >\r\n          <Tab label=\"All\" />\r\n          <Tab label={PROJECT_TYPE.FRONT_END} />\r\n          <Tab label={PROJECT_TYPE.FULL_STACK} />\r\n          <Tab label={PROJECT_TYPE.DESKTOP} />\r\n        </Tabs>\r\n      </AppBar>\r\n      <TabPanel value={value} index={0} />\r\n    </div>\r\n  );\r\n}\r\n","C:\\Users\\datvo\\Desktop\\datvo-portfolio\\src\\components\\SectionTitle.js",[],"C:\\Users\\datvo\\Desktop\\datvo-portfolio\\src\\components\\ContentHeader.js",[],"C:\\Users\\datvo\\Desktop\\datvo-portfolio\\src\\components\\ContactForm.js",[],{"ruleId":"68","replacedBy":"69"},{"ruleId":"70","replacedBy":"71"},{"ruleId":"72","severity":1,"message":"73","line":2,"column":15,"nodeType":"74","messageId":"75","endLine":2,"endColumn":24},{"ruleId":"72","severity":1,"message":"76","line":2,"column":25,"nodeType":"74","messageId":"75","endLine":2,"endColumn":33},{"ruleId":"72","severity":1,"message":"77","line":98,"column":9,"nodeType":"74","messageId":"75","endLine":98,"endColumn":14},{"ruleId":"72","severity":1,"message":"78","line":93,"column":7,"nodeType":"74","messageId":"75","endLine":93,"endColumn":12},{"ruleId":"72","severity":1,"message":"79","line":2,"column":8,"nodeType":"74","messageId":"75","endLine":2,"endColumn":17},{"ruleId":"72","severity":1,"message":"80","line":9,"column":3,"nodeType":"74","messageId":"75","endLine":9,"endColumn":7},{"ruleId":"72","severity":1,"message":"81","line":14,"column":3,"nodeType":"74","messageId":"75","endLine":14,"endColumn":8},{"ruleId":"72","severity":1,"message":"82","line":215,"column":9,"nodeType":"74","messageId":"75","endLine":215,"endColumn":16},"no-native-reassign",["83"],"no-negated-in-lhs",["84"],"no-unused-vars","'useEffect' is defined but never used.","Identifier","unusedVar","'useState' is defined but never used.","'theme' is assigned a value but never used.","'Intro' is defined but never used.","'PropTypes' is defined but never used.","'type' is defined but never used.","'Paper' is defined but never used.","'classes' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]